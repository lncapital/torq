[cln]
# Host:Port of the CLN node
#url = "127.0.0.1:17272"
# Path on disk to CLN client certificate file (if you are running Torq in a container, make sure to mount the file)
#certificate-path = "~/.cln/client.pem"
# Path on disk to CLN client key file (if you are running Torq in a container, make sure to mount the file)
#key-path = "~/.cln/client-key.pem"
# Path on disk to CLN certificate authority file (if you are running Torq in a container, make sure to mount the file)
#ca-certificate-path = "~/.cln/ca.pem"

[lnd]
# Host:Port of the LND node
#url = "127.0.0.1:10009"
# Path on disk to LND Macaroon (if you are running Torq in a container, make sure to mount the file)
#macaroon-path = "~/.lnd/admin.macaroon"
# Path on disk to LND TLS file (if you are running Torq in a container, make sure to mount the file)
#tls-path = "~/.lnd/tls.cert"

[bitcoind]
# Bitcoind network (MainNet, TestNet, RegTest, SigNet, SimNet)
#network = "MainNet"
# Bitcoind RPC Host:Port
#url = "localhost:8332"
# Bitcoind RPC user
#user = "bitcoinrpc"
# Bitcoind RPC password
#password =

[db]
# Name of the database
#name = "torq"
# Name of the postgres user with access to the database
#user = "postgres"
# Password used to access the database
password = "runningtorq"
# Port of the database
#port = "5432"
# Host of the database
host = "<YourDatabaseHost>"

[torq]
# Password used to access the API and frontend
password = "<YourUIPassword>"
# Network interface to serve the HTTP API"
#network-interface = "0.0.0.0"
# Port to serve the HTTP API
port = "<YourPort>"
# When pprof path is set then pprof is loaded when Torq boots.
#pprof.path = "localhost:6060"
# Specify different debug levels (panic|fatal|error|warn|info|debug|trace)
#debuglevel = "info"
# Alternative path for alternative vector service implementation.
#vector.url = "https://vector.ln.capital/"
# Path to auth cookie file
#cookie-path =
# Start the server without subscribing to node data
#no-sub = false
# Allows logging in without a password
#auto-login = false

[customize]
# Mempool custom URL (no trailing slash)
#mempool.url = "https://mempool.space"

[otel]
# Type of OpenTelemetry exporter stdout/file/jaeger
exporter.type="stdout"
# Endpoint for jaeger
#exporter.endpoint=""
# Path for the exporter
#exporter.path="traces.txt"
# Sampler ratio default: 0.10 or 10%
sampler.fraction=0.0
